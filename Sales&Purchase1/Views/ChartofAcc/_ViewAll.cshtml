@model IPagedList<Sales_Purchase1.Models.ChartofAcc>
@using X.PagedList.Mvc.Core;
@using X.PagedList;


@*<partial name="_Notification" />*@

<div class="exp1">
    <p>
        <a onclick="showInPopup('@Url.Action("AddEdit","ChartofAcc",new{id=0},Context.Request.Scheme)','New Account')" class="btn btn-primary mb-3" style="width: 150px; align-content:center;">
            <i class="bi bi-plus-lg"></i> Create New
        </a>
    </p>


    <a asp-route-sortOrder="All" asp-route-searchTerm="@ViewBag.CurrentSearchTerm" style="text-decoration: none;"> All </a> |
    <a  asp-route-sortOrder="Revenue" asp-route-searchTerm="@ViewBag.CurrentSearchTerm" style="text-decoration: none;"> Revenue </a> |
    <a  asp-route-sortOrder="Expense" asp-route-searchTerm="@ViewBag.CurrentSearchTerm" style="text-decoration: none;"> Expense </a> |
    <a  asp-route-sortOrder="Asset" asp-route-searchTerm="@ViewBag.CurrentSearchTerm" style="text-decoration: none;"> Asset </a> |
    <a  asp-route-sortOrder="Liability" asp-route-searchTerm="@ViewBag.CurrentSearchTerm" style="text-decoration: none;"> Liability </a> |
    <a  asp-route-sortOrder="Equity" asp-route-searchTerm="@ViewBag.CurrentSearchTerm" style="text-decoration: none;"> Equity </a>
   

    <form class="d-flex col-4 offset-md-8  mb-3">
        <input class="form-control me-sm-2" type="search" placeholder="Search" name="searchTerm">
        <button class="btn btn-secondary my-2 my-sm-0" type="submit">Search</button>
    </form>

   

    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.First().AccCode)
                </th>
                <th class="col-7">
                    @Html.DisplayNameFor(model => model.First().AccName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().AccType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.First().AccYTD)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccCode)
                    </td>
                    <td>
                        <div>
                            @Html.DisplayFor(modelItem => item.AccName)
                           
                        </div>
                        <div style="font-size: 14px; color:darkgrey;">
                            @Html.DisplayFor(modelItem => item.AccDesc)
                        </div>
                        
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AccYTD)
                    </td>
                    <td>
                        
                        <a onclick="showInPopup('@Url.Action("AddEdit","ChartofAcc",new{id = item.AccId},Context.Request.Scheme)','Update Account')" class="btn btn btn-warning" >
                            <i class="bi bi-pencil-square"></i>
                        </a>

                       <a asp-action="Transaction" asp-route-id="@item.AccId" class="btn btn-info">
                            <i class="bi bi-card-text"></i>
                        </a>
                        @if (item.Acclock == 1)
                        {
                            <i class="bi bi-lock-fill"></i>
                        }
                        else
                        {
                            <a asp-action="Delete" asp-route-id="@item.AccId"  class="btn btn-danger">
                                <i class="bi bi-x-square"></i>
                            </a>
                        }
                        
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div>
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @if (Model.HasPreviousPage)
        {
            @Html.ActionLink("  <<  ", "Index", new { page = 1, searchTerm = Context.Request.Query["searchTerm"] }, new { @class = "no-underline" })
            @Html.ActionLink("  <  ", "Index", new { page = Model.PageNumber - 1, searchTerm =  Context.Request.Query["searchTerm"] }, new { @class = "no-underline" })
        }
        else
        {
            @:<<  
            @:< 
        }

        @if (Model.HasNextPage)
        {
            @Html.ActionLink("  >   ", "Index", new { page = Model.PageNumber + 1, searchTerm =  Context.Request.Query["searchTerm"] }, new { @class = "no-underline" })
            @Html.ActionLink("  >>  ", "Index", new { page = Model.PageCount, searchTerm =  Context.Request.Query["searchTerm"] }, new { @class = "no-underline" })
        }
        else
        {
            @:>  
            @:>> 
        }
    </div>
    <form method="get">
        <label for="pageSize">Records per page:</label>
        <select id="pageSize" name="pageSize" onchange="this.form.submit()">
            <option value="10">10</option>
            <option value="20">20</option>
            <option value="50">50</option>
            <!-- Add more options as needed -->
        </select>
    </form>
</div>